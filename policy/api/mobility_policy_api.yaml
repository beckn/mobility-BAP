openapi: 3.0.0
info:
  version: 0.1.0
  title: Mobility Policy Implementation API
  description: API to manage policy flow.
paths:
  /v1/policy/broadcast:
    post:
      tags:
        - Policy Broadcast
      summary: Process Policy
      requestBody:
        description: Policy details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPolicy'
      responses:
        '200':
          description: Policy processed by subscriber
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Acknowledgement'
        '404':
          description: Policy could not be processed by subscriber
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "404"
                  message: "Policy could not be processed by subscriber"
                  data: "Long descriptive message"
                  type: "Application error"
                  path: "/v1/policy/broadcast"
        '500':
          description: Policy could not be processed by subscriber due to unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "500"
                  message: "Error processing request {specific error log from exception/error}"
                  data: "Additional error message/logs"
                  type: "System error"
                  path: "/v1/policy/broadcast"
  /v1/policy/broadcast/update:
    post:
      tags:
        - Policy Broadcast
      summary: Update Policy Status
      requestBody:
        description: Policy status update details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyBroadcastStatus'
      responses:
        '200':
          description: Policy status updates processed by subscriber
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Acknowledgement'
        '404':
          description: Policy status updates could not be processed by subscriber
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "404"
                  message: "Policy could not be processed by subscriber"
                  data: "Long descriptive message"
                  type: "Application error"
                  path: "/v1/policy/broadcast/update"
        '500':
          description: Policy status updates could not be processed by subscriber due to unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "500"
                  message: "Error processing request {specific error log from exception/error}"
                  data: "Additional error message/logs"
                  type: "System error"
                  path: "/v1/policy/broadcast/update"
  /v1/policy:
    get:
      tags:
        - Mobility Policy Admin
      summary: Get All Policies 
      responses:
        '200':
          description: Requested policies retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllPoliciesResponse'
        '404':
          description: Requested policies could not be retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "404"
                  message: "Requested policies could not be retrieved"
                  data: "Long descriptive message"
                  type: "Application error"
                  path: "/v1/policy"
        '500':
          description: Requestd policies could not be retrieved due to unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "500"
                  message: "Error processing request {specific error log from exception/error}"
                  data: "Additional error message/logs"
                  type: "System error"
                  path: "/v1/policy"
    put:
      tags:
        - Mobility Policy Admin
      summary: Update Policy Status
      requestBody:
        description: Policy status update by mobility admin
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyStatus'
      responses:
        '200':
          description: Policy status updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePolicyStatus'
        '404':
          description: Policy status update failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "404"
                  message: "Policy status could not be updated"
                  data: "Long descriptive message"
                  type: "Application error"
                  path: "/v1/policy"
        '500':
          description: Policy status could not be updated due to unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "500"
                  message: "Error processing request {specific error log from exception/error}"
                  data: "Additional error message/logs"
                  type: "System error"
                  path: "/v1/policy"
  /v1/policy/{policyId}:
    get:
      tags:
        - Mobility Policy Admin
      summary: Get Policy Details 
      parameters:
        - name: policyId
          description: Policy Id
          in: path
          required: true
          schema:
            type: string
          example:
            "123456"
      responses:
        '200':
          description: Policy details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDetails'
        '404':
          description: Policy details could not be retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "404"
                  message: "Policy details could not be retrieved"
                  data: "Long descriptive message"
                  type: "Application error"
                  path: "/v1/policy/{policyId}"
        '500':
          description: Policy details could not be retrieved due to unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "500"
                  message: "Error processing request {specific error log from exception/error}"
                  data: "Additional error message/logs"
                  type: "System error"
                  path: "/v1/policy/{policyId}"
  /v1/policy/checkViolation/location:
    post:
      tags:
        - Policy Violation Check
      summary: Check location policy violation
      requestBody:
        description: Location coordinates
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCoordinates'
      responses:
        '200':
          description: Location policy violation validated for provided coordinates
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/LocationPolicyCheckResult'
        '404':
          description: Location policy violation could not be validated for provided coordinates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "404"
                  message: "Location policy violation could not be validated for provided coordinates"
                  data: "Long descriptive message"
                  type: "Application error"
                  path: "/v1/policy/checkViolation/location"
        '500':
          description: Location policy violation could not be validated for provided coordinates due to unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "500"
                  message: "Error processing request {specific error log from exception/error}"
                  data: "Additional error message/logs"
                  type: "System error"
                  path: "/v1/policy/checkViolation/location"
components:
  schemas:
    Context:
      description: Policy schema context object
      type: object
      required:
        - action
        - domain
        - country
        - city
        - version
      properties:
        action:
          type: string
        domain:
          type: string
        location:
          type: object
          properties:
            country:
              type: string
            city:
              type: string
        version:
          type: string
    PolicyBroadcast:
      description: Schema for Policy broadcast object
      type: object
      required:
        - domain
      properties:
        id:
          description: Policy id
          type: string
        owner:
          type: object
          properties:
            descriptor:
              type: object
              properties:
                name:
                  description: Policy owner name
                  type: string
                contact:
                  type: object
                  properties:
                    email:
                      description: Policy owner contact email
                      type: string
        descriptor:
          type: object
          properties:
            name:
              description : Policy name
              type: string
            short_desc:
              description: Policy description
              type: string
        media:
          type: array
          items:
            $ref: '#/components/schemas/MediaData'
        type:
          description: Policy type
          type: string
        coverage:
          type: array
          items:
            type: object 
            properties:
              spatial:
                type: array
                items:
                  type: object
                  properties:
                    country:
                      description: Policy applied to country
                      type: string
                    city:
                      description: Policy applied to city
                      type: string
              temporal:
                type: array
                items:
                  type: object
                  properties:
                    range:
                      type: object
                      properties:
                        start:
                          description: Policy start date
                          type: string
                        end:
                          description: Policy end date
                          type: string
              subscribers:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      description: Policy applicable to
                      type: string
        geofences:
          type: array
          items:
            type: object
            properties:
              polygon:
                description: Policy polygon to apply policy
                type: array
                items:
                  type: string
        rules:
          description: Policy rules json
          type: object
    MediaData:
      description: Media Data
      type: object
      properties:
        mimetype:
          type: string
          description: mimetype
        url:
          type: string
          description: mimetype
    Policy:
      description: Schema for Policy object
      type: object
      required:
        - domain
        - type
        - country
        - city
        - name
        - description
        - owner
        - startDate
        - endDate
        - applicableTo
        - polygon
      properties:
        domain:
          description: Domain to implement policy
          type: string
        type:
          description: Policy type
          type: string
        country:
          description: Policy applied to country
          type: string
        city:
          description: Policy applied to city
          type: string
        name:
          description: Policy name
          type: string
        description:
          description: Policy description
          type: string
        owner:
          description: Policy name
          type: string
        contactEmail:
          description: Policy owner contact email
          type: string
        policyDocuments:
          description: Policy name
          type: string
        startDate:
          description: Policy start date
          type: string
        endDate:
          description: Policy end date
          type: string
        applicableTo:
          description: Policy applicable to
          type: array
          items:
            type: string
        polygon:
          description: Policy polygon to apply policy
          type: array
          items:
            type: string
        rules:
          description: Policy rules json
          type: object
    PolicyId:
      description: Policy id
      type: string
      required:
        - id
      properties:
        id:
          type: string
          description: policy id stored in database
    PolicyStatus:
      description: Policy status
      type: string
      required:
        - status
      properties:
        status:
          type: string
          description: policy status stored in database
          enum:
            - new
            - applied
            - disputed
            - inactive
    AddPolicy:
      description: Schema to add new Policy
      type: object
      required:
        - context
        - policy
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          type: object
          properties:
            policy:
              allOf:  
                - $ref: '#/components/schemas/PolicyBroadcast'
    UpdatePolicyBroadcastStatus:
      description: Schema for Policy status update via broadcasted message
      type: object
      required:
        - context
        - message
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          type: object
          properties:
            policy:
              type: object
              allOf:  
                - $ref: '#/components/schemas/PolicyId'
                - $ref: '#/components/schemas/PolicyStatus'
    UpdatePolicyStatus:
      description: Schema for Policy status update
      type: object
      properties:
        policy:
          type: object
          required:
            - policyId
            - status
          allOf:  
            - $ref: '#/components/schemas/PolicyId'
            - $ref: '#/components/schemas/PolicyStatus'
    AllPoliciesResponse:
      description: Schema to list all policies metadata
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/PoliciesMetaData'
    PoliciesMetaData:
      description: Schema for Policy metadata (List policies)
      type: object
      required:
        - id
        - status
        - name
        - type
        - startDate
        - endDate
      allOf:  
        - $ref: '#/components/schemas/PolicyId'
        - $ref: '#/components/schemas/PolicyStatus'
      properties:
        name:
          description: Policy name
          type: string
        type:
          description: Policy type
          type: string
        startDate:
          description: Policy start date
          type: string
        endDate:
          description: Policy end date
          type: string
    PolicyDetails:
      description: Schema for Policy details
      type: object
      properties:
        policy:
          type: object
          required:
            - id
            - status
            - domain
            - type
            - country
            - city
            - name
            - description
            - owner
            - startDate
            - endDate
            - applicableTo
            - polygon
          allOf:  
            - $ref: '#/components/schemas/PolicyId'
            - $ref: '#/components/schemas/PolicyStatus'
            - $ref: '#/components/schemas/Policy'
          properties:
            createdBy:
              description: Policy added by id (System)
              type: string
            createdAt:
              description: Policy addition timestamp
              type: string
            latModifiedBy:
              description: Policy record modifier id/email
              type: string
            lastModifiedAt:
              description: Policy record modification timestamp
              type: string
    LocationCoordinates:
      description: Schema for location coordinates (longitude,latitude)
      type: object
      properties:
        locations:
          type: array
          items:
            type: string
    LocationPolicyCheckResult:
      description: Location policy violation result
      type: object
      properties:
        policyCheckResult:
          type: array
          items:
            $ref: '#/components/schemas/LocationPolicyViolation'
    LocationPolicyViolation:
      description: Location policy violation object
      type: object
      properties:
        location:
          type: string
        violation:
          type: boolean
        violatedPolicies:
          type: array
          items:
            properties:
              id:
                $ref: '#/components/schemas/PolicyId'
    Acknowledgement:
      type: object
      required:
        - message
      properties:
        context:
          $ref: '#/components/schemas/Context'
        message:
          description: Message object
          type: object
          properties:
            ack:
              type: object
              properties:
                policy:
                  type: object
                  allOf:  
                    - $ref: '#/components/schemas/PolicyId'
                    - $ref: '#/components/schemas/PolicyStatus'
    Error:
      type: object
      properties:
        error:
          type: object
          required:
            - type
            - code
            - message
            - path
          properties:
            code:
              description: Policy specific error code
              type: string
            message:
              description: Human readable error message from databse/API
              type: string
            data:
              description: Additional error data
              type: object
            type:
              description: Error type
              type: string
            path:
              description: Path to json schema generating the error. Used only during json schema validation errors
              type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []
servers:
  - url: https://api.mobility.bap.policy.becknprotocol.io
    variables: {}